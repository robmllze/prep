// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
//
// PREP EXAMPLE YAML
//
// <#Author = Robert Mollentze>
// <#Email = robmllze@gmail.com,>
// <#Date = 8/26/2021>
//
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

library prep;

import 'dart:io' show File;

// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

const PREP_EXAMPLE_YAML = //
    '# This file was auto-generated by prep().\n'
    '# Rename it to "prep.yaml" to use it.\n'
    '# If you like this package, please follow me on Instagram @robmllze.\n'
    '# Feel free to DM me about bugs or questions.\n'
    '\n'
    '# Files in this directory and all its subdirectories will be parsable.\n'
    'path: "."\n'
    '\n'
    '# If you need to tweak the syntax, do it here.\n'
    '# Note: This is experimental!\n'
    'syntax_beg: "<" # This also works well: "`"\n'
    'syntax_end: ">" # This also works well: "`"\n'
    'syntax_sep: "=" # This also works well: ":"\n'
    '\n'
    '# Set to true to include your environment variables.\n'
    '# Note: This significantly slows down the prep function but it does\n'
    '# not matter if you use it asynchronously.\n'
    'include_env: true\n'
    '\n'
    '# Specify which custom fields to update.\n'
    'update_these_fields: {\n'
    '  "Version": "0.1.0",\n'
    '  "Author": "Robert Mollentze",\n'
    '  "GitHub": "@robmllze",\n'
    '  "Instagram": "@robmllze,"\n'
    '  "Email": "robmllze@gmail.com",\n'
    '}\n'
    '\n'
    '# Specify which file types to parse.\n'
    'parse_these_file_types: [\n'
    '  "dart",\n'
    '  "md",\n'
    ']\n'
    '\n'
    '# Specify which files not to parse.\n'
    'dont_parse_these_files: [\n'
    '  "prep.yaml",\n'
    ']\n';

// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

Future<void> genPrepExampleYaml() {
  return Future<void>(() async {
    final _file0 = File("./prep.yaml");
    final _file1 = File("./prep_example.yaml");
    // Only generate file if both files above doesn't exist.
    if (!await _file0.exists() && !await _file1.exists()) {
      await _file1.writeAsString(PREP_EXAMPLE_YAML);
    }
  });
}